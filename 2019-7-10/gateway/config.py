# 串口配置
SERIAL_CONFIG = {
    'port': '/dev/ttyAMA0',
    'baudrate': '57600',
    'bytesize': 8,
    'parity': 'N',
    'stopbits': 1,
    'timeout': 2
}


# 下行协议
DOWN_PROTOCOL = {
    # 节点板1 开始
    # 获取灯的状态 light
    'GETLIGHT': bytearray(b'\xfe\xfe\x00\xff\xff\x0c\x00\x00\x00\x01\x10\xff'),
    # 打开灯 light1
    'OPENLIGHT': bytearray(b'\xfe\xfe\x00\xff\xff\x0c\x00\x00\x00\x01\x01\xff'),
    # 关闭灯 light0
    'CLOSELIGHT': bytearray(b'\xfe\xfe\x00\xff\xff\x0c\x00\x00\x00\x01\x00\xff'),

    # 获取CO2传感器的值 C
    'GETCO2': bytearray(b'\xfe\xfe\x00\xff\xff\x0c\x00\x00\x00\x02\x01\xff'),
    # 获取光照强度传感器的值 B
    'GETBEAM': bytearray(b'\xfe\xfe\x00\xff\xff\x0c\x00\x00\x00\x03\x01\xff'),
    # 获取温度的值 T
    'GETTEMPERATURE': bytearray(b'\xfe\xfe\x00\xff\xff\x0c\x00\x00\x00\x04\x01\xff'),
    # 获取湿度的值 H
    'GETHUMIDITY': bytearray(b'\xfe\xfe\x00\xff\xff\x0c\x00\x00\x00\x05\x01\xff'),
    # 获取火光传感器 的值  F
    'GETFLAME': bytearray(b'\xfe\xfe\x00\xff\xff\x0c\x00\x00\x00\x06\x01\xff'),
    # 获取可燃气体传感器(甲烷)的值  M
    'GETMETHANE': bytearray(b'\xfe\xfe\x00\xff\xff\x0c\x00\x00\x00\x07\x01\xff'),
    # 获取烟雾传感器的值 S
    'GETSMOKE': bytearray(b'\xfe\xfe\x00\xff\xff\x0c\x00\x00\x00\x08\x01\xff'),
    # 获取PM2.5传感器的值 PM2.5
    'GETPM25': bytearray(b'\xfe\xfe\x00\xff\xff\x0c\x00\x00\x00\x09\x01\xff'),

    # 获取报警器的值 a
    'GETALERTOR': bytearray(b'\xfe\xfe\x00\xff\xff\x0c\x00\x00\x00\x0a\x10\xff'),
    # 打开报警器 a1
    'OPENALERTOR': bytearray(b'\xfe\xfe\x00\xff\xff\x0c\x00\x00\x00\x0a\x01\xff'),
    # 关闭 报警器 a0
    'CLOSEALERTOR': bytearray(b'\xfe\xfe\x00\xff\xff\x0c\x00\x00\x00\x0a\x00\xff'),
    # 获取报警灯的值 al
    'GETALARMLAMP': bytearray(b'\xfe\xfe\x00\xff\xff\x0c\x00\x00\x00\x0b\x10\xff'),
    # 打开报警灯  al1
    'OPENALARMLAMP': bytearray(b'\xfe\xfe\x00\xff\xff\x0c\x00\x00\x00\x0b\x01\xff'),
    # 关闭报警灯 al0
    'CLOSEALARMLAMP': bytearray(b'\xfe\xfe\x00\xff\xff\x0c\x00\x00\x00\x0b\x00\xff'),

    # 获取入侵检测状态(对射开关) I
    'GETINVADE': bytearray(b'\xfe\xfe\x00\xff\xff\x0c\x00\x00\x00\x0c\x01\xff'),
    # 获取光电传感器的值 P
    'GETPHOTOSENSOR': bytearray(b'\xfe\xfe\x00\xff\xff\x0c\x00\x00\x00\x0d\x01\xff'),

    # 获取风扇状态 f
    'GETFAN': bytearray(b'\xfe\xfe\x00\xff\xff\x0c\x00\x00\x00\x0e\x10\xff'),
    # 打开风扇 f1
    'OPENFAN': bytearray(b'\xfe\xfe\x00\xff\xff\x0c\x00\x00\x00\x0e\x01\xff'),
    # 关闭风扇 f0
    'CLOSEFAN': bytearray(b'\xfe\xfe\x00\xff\xff\x0c\x00\x00\x00\x0e\x00\xff'),

    # 打开继电器1 r11
    'OPENRELAY1': bytearray(b'\xfe\xfe\x00\xff\xff\x0d\x00\x00\x00\x0f\x01\x01\xff'),
    # 关闭继电器1 r10
    'CLOSERELAY1': bytearray(b'\xfe\xfe\x00\xff\xff\x0d\x00\x00\x00\x0f\x01\x00\xff'),
    # 打开继电器2 r21
    'OPENRELAY2': bytearray(b'\xfe\xfe\x00\xff\xff\x0d\x00\x00\x00\x0f\x02\x01\xff'),
    # 关闭继电器2 r20
    'CLOSERELAY2': bytearray(b'\xfe\xfe\x00\xff\xff\x0d\x00\x00\x00\x0f\x02\x00\xff'),

    # 获取水泵(步进电机)状态 p
    'GETPUMP': bytearray(b'\xfe\xfe\x00\xff\xff\x0c\x00\x00\x00\x10\x10\xff'),
    # 打开水泵(步进电机) p1
    'OPENPUMP': bytearray(b'\xfe\xfe\x00\xff\xff\x0c\x00\x00\x00\x10\x01\xff'),
    # 关闭水泵(步进电机) p0
    'CLOSEPUMP': bytearray(b'\xfe\xfe\x00\xff\xff\x0c\x00\x00\x00\x10\x00\xff'),

    # 获取锁状态 l
    'GETLOCK': bytearray(b'\xfe\xfe\x00\xff\xff\x0d\x00\x00\x00\x11\x00\x10\xff'),
    # 打开锁 l1
    'OPENLOCK': bytearray(b'\xfe\xfe\x00\xff\xff\x0d\x00\x00\x00\x11\x00\x01\xff'),
    # 关闭锁 l0
    'CLOSELOCK': bytearray(b'\xfe\xfe\x00\xff\xff\x0d\x00\x00\x00\x11\x00\x00\xff'),

    # 在led上写字
    'WRITELED': bytearray(b'\xfe\xfe\x00\xff\xff\x00\x00\x00\x00\x12\x00\xff')
}
